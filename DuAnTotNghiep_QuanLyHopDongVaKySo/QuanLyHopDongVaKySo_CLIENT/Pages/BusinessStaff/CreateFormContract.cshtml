@page
@model QuanLyHopDongVaKySo_CLIENT.Pages.BusinessStaff.CreateFormContractModel
@{
}
<div class="container-fluid">
    <div class="fit_email">
        <h5>adc@gmail.com</h5>
    </div>
    <div class="row form_create">
        <div class="col-4">
            <h4 style="color: #4318FF; font-family:Source Sans Pro;">Các hợp đồng mẫu</h4>
            <div class="upForm">
                <button class="upload">
                    <i class="ph-bold ph-upload-simple"></i>
                </button>
                <h3 style="color: #4318FF;">UPLOAD FILE</h3>
            </div>
        </div>
        
        <div class="col-8">
            <button id="drawButton" class="draw-button">
                <i class="ph-bold ph-note-pencil"></i>
            </button>
            <embed id="drawArea" src="path_to_your_pdf.pdf" type="application/pdf" style="width: 100%; height:100%;">
        </div>
    </div>
</div>
<script>
    const drawButton = document.getElementById('drawButton');
    const drawArea = document.getElementById('drawArea');
    let isDrawing = false;
    let isMoving = false;
    let startX, startY, endX, endY;
    let currentTextArea = null;

    drawButton.addEventListener('click', () => {
        if (!isDrawing) {
            isDrawing = true;
            drawButton.classList.add('draw-active');
            drawButton.style.cursor = 'crosshair';
            document.body.style.cursor = 'crosshair';
        } else {
            isDrawing = false;
            drawButton.classList.remove('draw-active');
            drawButton.style.cursor = 'pointer';
            document.body.style.cursor = 'auto';
            drawArea.style.cursor = 'auto'; // Thêm dòng này để đảm bảo sử dụng con trỏ chuột mặc định khi không trong chế độ vẽ.
        }
    });

    document.addEventListener('mousedown', (e) => {
        if (isDrawing) {
            startX = e.clientX;
            startY = e.clientY;
        } else if (isMoving) {
            currentTextArea = e.target;
            currentTextArea.style.border = '2px dashed #000';
        }
    });

    document.addEventListener('mouseup', (e) => {
        if (isDrawing) {
            endX = e.clientX;
            endY = e.clientY;

            if (currentTextArea) {
                currentTextArea.style.border = '2px dashed #000';
            } else {
                const width = Math.abs(endX - startX);
                const height = Math.abs(endY - startY);

                const textArea = document.createElement('textarea');
                textArea.classList.add('text-area');
                textArea.style.left = startX + 'px';
                textArea.style.top = startY + 'px';
                textArea.style.width = width + 'px';
                textArea.style.height = height + 'px';

                textArea.addEventListener('mousedown', () => {
                    isMoving = true;
                });

                textArea.addEventListener('mouseup', () => {
                    isMoving = false;
                    currentTextArea = null;
                });

                drawArea.appendChild(textArea);
            }

            isDrawing = false;
            drawButton.classList.remove('draw-active');
            drawButton.style.cursor = 'pointer';
            document.body.style.cursor = 'auto';
            drawArea.style.cursor = 'auto';
        }
    });

    drawArea.addEventListener('mousemove', (e) => {
        if (isMoving && currentTextArea) {
            const offsetX = e.clientX - startX;
            const offsetY = e.clientY - startY;
            startX = e.clientX;
            startY = e.clientY;

            currentTextArea.style.left = parseInt(currentTextArea.style.left) + offsetX + 'px';
            currentTextArea.style.top = parseInt(currentTextArea.style.top) + offsetY + 'px';

        }
    });
    // kiểm tra toạ độ

    //const checkCoordinatesButton = document.getElementById('checkCoordinatesButton');
    //const coordinatesResult = document.getElementById('coordinatesResult');

    //checkCoordinatesButton.addEventListener('click', () => {
    //    const textAreas = document.querySelectorAll('.text-area');

    //    coordinatesResult.innerHTML = ''; // Xóa kết quả trước khi hiển thị kết quả mới.

    //    textAreas.forEach((textArea, index) => {
    //        const left = textArea.style.left;
    //        const top = textArea.style.top;

    //        coordinatesResult.innerHTML += `Vùng text ${index + 1} ở vị trí: left ${left}, top ${top}<br>`;
    //    });
    //});
</script>