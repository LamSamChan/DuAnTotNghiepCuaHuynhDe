@model QuanLyHopDongVaKySo.CLIENT.ViewModels.VMCreateFormForCus
<link rel="stylesheet" href="~/lib/libs/select2/select2.css" />
<script src="~/lib/libs/jquery/jquery-3.6.0.min.js"></script>
<script src="~/lib/libs/select2/select2.full.min.js"></script>
@{
    string userRole = Context.Request.HttpContext.Session.GetString("Role");
}

<div class="container-fluid">

    @if (userRole == "Admin")
    {
        Layout = "_AdminLayout";
        <div class=" block justify-between items-center p-4  mt-4 mb-6 bg-white rounded-2xl shadow-xl shadow-gray-200 lg:p-5 sm:flex">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <i class="ph-bold ph-house" style="font-size: 20px; margin: auto 5px;"></i>
                    <li class="breadcrumb-item"> <a>Trang chủ</a></li>
                    <li class="breadcrumb-item"><a>Quản lý tài khoản người dùng</a></li>
                    <li class="breadcrumb-item active" aria-current="page"> Danh sách khách hàng</li>
                </ol>
            </nav>
            <h1 class="typeHead">TẠO HỢP ĐỒNG</h1>
        </div>

    }
    else
    {
       

        Layout = "_Layout";
        <div class=" block justify-between items-center p-4  mt-4 mb-6 bg-white rounded-2xl shadow-xl shadow-gray-200 lg:p-5 sm:flex">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <i class="ph-bold ph-house" style="font-size: 20px; margin: auto 5px;"></i>
                    <li class="breadcrumb-item"> <a>Trang chủ</a></li>
                    <li class="breadcrumb-item"><a>Quản lý khách hàng</a></li>
                    <li class="breadcrumb-item active" aria-current="page"> Danh sách khách hàng</li>
                </ol>
            </nav>
            <h1 class="typeHead">TẠO HỢP ĐỒNG</h1>
        </div>

    }
    <form method="post" asp-action="CreatePContract">
        <div style="margin-top: 30px;" class="row justify-content-center">
            <div class="col-4 bg-white rounded">
                <div class="row g-3">
                    <div class="form-group">
                        <label for="Province">Tỉnh/Thành Phố</label>
                        <select id="Province" class="form-control" required></select>
                    </div>
                    <div class="form-group">
                        <label for="District">Quận/Huyện</label>
                        <select id="District" class="form-control" required></select>
                    </div>
                    <div class="form-group">
                        <label for="Ward">Xã/Phường</label>
                        <select id="Ward" class="form-control" required></select>
                    </div>
                    <div class="form-group">
                        <label for="Address" >Số nhà</label>
                        <input type="text" id="Address" class="form-control" required>
                    </div>
                    <div class="form-floating mt-4">
                        <textarea class="form-control" placeholder="Leave a comment here" id="floatingTextarea2" style="height: 100px" asp-for="PostPendingContract.InstallationAddress" required readonly></textarea>
                        <label for="floatingTextarea2">Địa chỉ lắp</label>
                    </div>
                </div>
            </div>
            <div class="col-4 rounded" >
                <div class="box_Svd">
                    <div class="input-group mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-default"><i class="ph-bold ph-magnifying-glass"></i></span>
                        <input type="search" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default">
                    </div>
                    <ul class="listSVC">
                        @foreach (var tos in Model.TypeOfServices)
                        {
                            <li>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" asp-for="PostPendingContract.TOS_ID" value="@tos.TOS_ID" required>
                                    <label class="form-check-label">
                                        @tos.ServiceName
                                    </label>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div class="row" style="margin: 40px auto; width:300px;">
            <button class="add_cus" type="submit">
                TẠO HỢP ĐỒNG
                 @if (TempData["SweetType"] != null && TempData["SweetIcon"] != null && TempData["SweetTitle"] != null)
                {
                    <script>
                        document.addEventListener('DOMContentLoaded', function () {
                            var sweetData = {
                                title: '@TempData["SweetTitle"]',
                                text: '@TempData["SweetText"]',
                                icon: '@TempData["SweetIcon"]'
                            };
                            Swal.fire({
                                title: sweetData.title,
                                text: sweetData.text,
                                icon: sweetData.icon,
                                showCancelButton: false,
                                allowOutsideClick: false,
                                confirmButtonColor: "green",
                                confirmButtonText: "Ok"
                            }).then(function () {
                                // Handle any additional logic after the SweetAlert is closed.
                            });
                        });
                    </script>
                }

            </button>
        </div>
    </form>

</div>
<script>
    const provice_url = "https://api.npoint.io/ac646cb54b295b9555be";
    const district_url = "https://api.npoint.io/34608ea16bebc5cffd42";
    const ward_url = "https://api.npoint.io/dd278dc276e65c68cdf5";

    var province_list = [];
    var district_list = [];
    var ward_list = [];

    $(document).ready(function () {
        getAllDataForDropdown();
        initProviceDropdown();
        hanldeOnchangeProvice();
        hanldeOnchangeDistrict();
        $('#Ward, #District, #Province, #Address').on('change', function () {
            updateInstallationAddress();
        });

        function updateInstallationAddress() {
            var address = $('#Address').val();
            var ward = $('#Ward option:selected').text();
            var district = $('#District option:selected').text();
            var city = $('#Province option:selected').text();

            var completeAddress = address + ', ' + ward + ', ' + district + ', ' + city;

            $('textarea[name="PostPendingContract.InstallationAddress"]').val(completeAddress);

        }
        
    });


    var hanldeOnchangeProvice = function () {
        $("#Province").on("change", function () {
            var id = $(this).val();
            if (id) {
                $("#District").empty();

                var data_filter = district_list.filter(
                    (entry) => entry.ProvinceId === parseInt(id)
                );

                singleSelectDropdown("District", "Chọn Quận/Huyện", data_filter);
            }
        });
    };

    var hanldeOnchangeDistrict = function () {
        $("#District").on("change", function () {
            var id = $(this).val();
            if (id) {
                $("#Ward").empty();

                var data_filter = ward_list.filter(
                    (entry) => entry.DistrictId === parseInt(id)
                );

                singleSelectDropdown("Ward", "Chọn Xã/Phường", data_filter);
            }
        });
    };

    var initProviceDropdown = function () {
        var interval = setInterval(function () {
            if (province_list.length > 0) {
                singleSelectDropdown("Province", "Chọn Tỉnh/Thành Phố", province_list);
                clearInterval(interval);
            }
        }, 100);
    };

    var getAllDataForDropdown = function () {
        getProviceData(function (list) {
            province_list = list;
        });

        getDistrictData(function (list) {
            district_list = list;
        });

        getWardData(function (list) {
            ward_list = list;
        });
    };

    var getProviceData = function (callback) {
        $.getJSON(provice_url, function (list) {
            callback(list);
        });
    };

    var getDistrictData = function (callback) {
        $.getJSON(district_url, function (list) {
            callback(list);
        });
    };

    var getWardData = function (callback) {
        $.getJSON(ward_url, function (list) {
            callback(list);
        });
    };

    
    var singleSelectDropdown = function (id, placeholder, data, selectItem) {
        setTimeout(function () {
            $("#" + id).select2({
                placeholder: placeholder,
                data: data.map(function (item) {
                    return {
                        id: item.Id,
                        text: item.Name,
                    };
                }),
                allowClear: true,
            });
        }, 200);

        if (selectItem !== null) {
            setTimeout(function () {
                $("#" + id)
                    .val(selectItem)
                    .trigger("change");
            }, 200);
        }
    };
</script>