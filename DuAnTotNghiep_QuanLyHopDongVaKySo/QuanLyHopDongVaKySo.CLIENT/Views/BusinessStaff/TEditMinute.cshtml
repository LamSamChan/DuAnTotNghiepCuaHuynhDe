@*@model QuanLyHopDongVaKySo_API.Models.TemplateMinute

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css">
<link href="~/php/style.css" rel="stylesheet" />


<div class="container-fluid">
    <div class="page-header no-gutters has-tab">
        <div class="d-md-flex m-b-15 align-items-center justify-content-between">
            <div class="media align-items-center m-b-15">
                <br />
                <div class="m-l-15">
                    <h4 class="m-b-0"
                        style="width: 512px; height: 52px; color: #2B3674; font-size: 25px; font-family: DM Sans; font-weight: 700; line-height: 42px; word-wrap: break-word">
                        Chỉnh sửa cấu hình hợp đồng biên bản
                    </h4>
                </div>
            </div>

        </div>
    </div>
    <div style="margin: 10px;display: flex;align-items: end;justify-content: end;">
        <div class="SearchBox">
            <ul class="horizontal-list" style="list-style: none; display:flex; padding: 0.5rem;">
                <li>
                    <div class="Search">
                        <i class="ph-bold ph-magnifying-glass"></i>
                        <input type="text" placeholder="Search.." />
                    </div>
                </li>
                <li>
                    <a>
                        <i class="ph-bold ph-bell"></i>
                    </a>

                </li>
                <li>
                    <a>
                        <i class="ph-bold ph-moon"></i>
                    </a>
                </li>
                <li>
                    <img src="o.jpg" />
                </li>
            </ul>
        </div>
    </div>
    <br />
    <form class="row justify-content-around" style=" margin: 0 auto;" asp-action="TUpdateMinute" asp-controller="BusinessStaff" method="post">
        <div class="col-md-5">
            <div class="box1 row justify-content-between g-3 " style=" max-height: 800px;overflow-y: scroll; height:500px;">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="col-md-6">
                    <label asp-for="TMinuteID" class="form-label">Id</label>
                    <input class="form-control" disabled id="inputName" asp-for="TMinuteID">
                    <span class="text-danger" asp-validation-for="TMinuteID"></span>
                </div>

                <div class="col-md-6">
                    <label asp-for="jsonIntallationZone" class="form-label">Vị trí tải chữ ký </label>
                    <input class="form-control" id="inputName" asp-for="jsonIntallationZone">
                    <span class="text-danger" asp-validation-for="jsonIntallationZone"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="jsonCustomerZone" class="form-label">Vị trí chữ ký của nhân viên</label>
                    <input class="form-control" id="inputName" asp-for="jsonCustomerZone">
                    <span class="text-danger" asp-validation-for="jsonCustomerZone"></span>
                </div>
                <div class="col-md-7" style="margin:auto; padding: 20px 0;">
                    <button type="submit">
                        CẬP NHẬT
                    </button>
                </div>
            </div>
        </div>

    </form>
</div>*@

@model QuanLyHopDongVaKySo_API.Models.TemplateMinute

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css">
<link href="~/php/style.css" rel="stylesheet" />

<script src="https://unpkg.com/konva@9/konva.min.js"></script>

<div class="container-fluid">
    <div class="page-header no-gutters has-tab">
        <div class="d-md-flex m-b-15 align-items-center justify-content-between">
            <div class="media align-items-center m-b-15">
                <br />
                <div class="m-l-15">
                    <h4 class="m-b-0"
                        style="width: 512px; height: 52px; color: #2B3674; font-size: 24px; font-family: DM Sans; font-weight: 700; line-height: 42px; word-wrap: break-word">
                        Chỉnh sửa cấu hình hợp đồng biên bản
                    </h4>
                </div>
            </div>

        </div>
    </div>
    <div style="margin: 10px;display: flex;align-items: end;justify-content: end;">
        <div class="SearchBox">
            <ul class="horizontal-list" style="list-style: none; display:flex; padding: 0.5rem;">
                <li>
                    <div class="Search">
                        <i class="ph-bold ph-magnifying-glass"></i>
                        <input type="text" placeholder="Search.." />
                    </div>
                </li>
                <li>
                    <a>
                        <i class="ph-bold ph-bell"></i>
                    </a>

                </li>
                <li>
                    <a>
                        <i class="ph-bold ph-moon"></i>
                    </a>
                </li>
                <li>
                    <img src="o.jpg" />
                </li>
            </ul>
        </div>
    </div>
    <br />
    <div class="col-md-6" >
        <label asp-for="TMinuteID">Id</label>
        <input style="text-align:center; height:10x; width:50px" disabled asp-for="TMinuteID" >
        <span class="text-danger" asp-validation-for="TMinuteID"></span>
    </div>
    <br />
    <div style="display: flex; justify-content: space-evenly; gap: 20px;">
        <button id="addDirectorSignatureButton"  class="button-22">
            Thêm chữ ký Giám đốc (ĐỎ)
        </button>
        <button id="getCoordinatesButton"  class="number" >Lấy Tọa Độ</button>
        <button id="addCustomerSignatureButton" class="button-22">
            Thêm chữ ký Khách hàng (XANH)
        </button>

    </div>
    <br />
        <div id="pdfContainer"></div>
        <br />
    <div style="display: flex; justify-content: space-evenly; gap: 10px;">
    <button id="prevPageButton" class="button-22">Trang Trước</button>
    <button id="nextPageButton" class="button-22">Trang Tiếp</button>

    </div>
</div>
<script>
    const pdfContainer = document.getElementById("pdfContainer");
    const stage = new Konva.Stage({
        container: "pdfContainer",
        width: pdfContainer.clientWidth,
        height: pdfContainer.clientHeight,
    });
    const signatureLayer = new Konva.Layer(); // Lớp cho các vùng chữ ký
    const signatureAreas = [];
    let directorCoordinates = "";
    let customerCoordinates = "";
    let draggable = false;
    var imagePaths = [
        "/ContractImage/1/1.png",
        "/ContractImage/1/2.png",
        "/ContractImage/1/3.png",
        "/ContractImage/1/4.png",
        "/ContractImage/1/5.png",
        "/ContractImage/1/6.png",
    ];

    document
        .getElementById("addDirectorSignatureButton")
        .addEventListener("click", function () {
            draggable = true;
            createSignatureArea("Director");
        });

    document
        .getElementById("addCustomerSignatureButton")
        .addEventListener("click", function () {
            draggable = true;
            createSignatureArea("Customer");
        });

    document
        .getElementById("getCoordinatesButton")
        .addEventListener("click", function () {
            getSignatureAreasCoordinates();
        });

    document
        .getElementById("prevPageButton")
        .addEventListener("click", function () {
            showPage(currentPageIndex - 1);
        });

    document
        .getElementById("nextPageButton")
        .addEventListener("click", function () {
            showPage(currentPageIndex + 1);
        });

    let currentPageIndex = 0;

    function showPage(index) {
        if (index < 0 || index >= imagePaths.length) {
            return;
        }

        currentPageIndex = index;

        // Tìm lớp hiện tại
        let pdfLayer = stage.findOne(".pdf-layer");

        // Nếu lớp không tồn tại, tạo một lớp mới
        if (!pdfLayer) {
            pdfLayer = new Konva.Layer({
                name: "pdf-layer"
            });
            stage.add(pdfLayer);
        }

        const imgElement = new Image();

        imgElement.onload = function () {
            const img = new Konva.Image({
                x: 0,
                y: 0,
                width: pdfContainer.clientWidth,
                height: pdfContainer.clientHeight,
                name: "pdf-image",
                image: imgElement,
            });

            // Xóa tất cả các vị trí trong lớp hiện tại
            pdfLayer.destroyChildren();
            pdfLayer.add(img);
            pdfLayer.batchDraw();

            if (index === imagePaths.length - 1) {
                draggable = true;
            } else {
                draggable = false;
            }

            stage.add(signatureLayer);
        };

        imgElement.src = imagePaths[index];

        if (index === imagePaths.length - 1) {
            // Hiển thị vùng chữ ký chỉ ở trang cuối cùng
            signatureLayer.show();
        } else {
            signatureLayer.hide();
        }
    }

    function createSignatureArea(role) {
        // Kiểm tra xem vùng chữ ký đã được thêm chưa
        const existingSignature = signatureAreas.find(
            (area) => area.role === role
        );

        if (existingSignature) {
            alert(`Bạn đã thêm vị trí chữ ký của ${role} rồi.`);
            return;
        }

        const strokeColor = role === "Director" ? "red" : "blue";
        const labelText = role === "Director" ? "Giám đốc" : "Khách hàng";

        // Create a group to hold the background rectangle and text label
        const signatureGroup = new Konva.Group({
            x: 50,
            y: 50,
            width: 150,
            height: 70,
            draggable: draggable,
        });

        const backgroundRect = new Konva.Rect({
            width: 150,
            height: 70,
            fill: "white", // Set the background color
            stroke: strokeColor,
            strokeWidth: 2,
            dash: [5, 5],
            draggable: draggable,
        });

        const signatureText = new Konva.Text({
            width: 150,
            height: 70,
            text: labelText,
            fill: strokeColor,
            fontSize: 24,
            align: 'center',
            verticalAlign: 'middle',
        });

        // Add the background rectangle and text to the signatureGroup
        signatureGroup.add(backgroundRect, signatureText);

        // Add the group to the signatureLayer
        signatureLayer.add(signatureGroup);
        signatureLayer.batchDraw();

        signatureAreas.push({
            role,
            element: signatureGroup,
        });
    }

    function getSignatureAreasCoordinates() {
        signatureAreas.forEach((area) => {
            const position = area.element.getAbsolutePosition();
            const role = area.role.toLowerCase();

            if (role === "director") {
                directorCoordinates = {
                    x: position.x,
                    y: position.y
                };
            } else if (role === "customer") {
                customerCoordinates = {
                    x: position.x,
                    y: position.y
                };
            }
        });

        // Kiểm tra và làm gì đó với directorCoordinates và customerCoordinates
        console.log("Director Coordinates: ", directorCoordinates);
        console.log("Customer Coordinates: ", customerCoordinates);
    }

    document.addEventListener("DOMContentLoaded", function () {
        showPage(currentPageIndex);
    });
</script>





