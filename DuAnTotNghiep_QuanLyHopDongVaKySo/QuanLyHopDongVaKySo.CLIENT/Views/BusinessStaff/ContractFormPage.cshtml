@model QuanLyHopDongVaKySo_API.Models.PostTContract
@{
    string userRole = Context.Request.HttpContext.Session.GetString("Role");
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<style>
    .loading {
        position: absolute;
        z-index: 1;
        width: 100%;
        height: 100%;
        display: none;
        align-items: center;
        justify-content: center;
        background: rgba(0, 0, 0, 0.479);
    }

        .loading img {
            width: 7rem;
        }
</style>
<div class="loading" id="loading">
    <img src="https://icon-library.com/images/spinner-icon-gif/spinner-icon-gif-10.jpg" alt="loading">
</div>
<div class="container-fluid">
    @if (userRole == "Admin")
    {
        Layout = "_AdminLayout";

        <div class=" block justify-between items-center p-4  mt-4 mb-6 bg-white rounded-2xl shadow-xl shadow-gray-200 lg:p-5 sm:flex rounded">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <i class="ph-bold ph-house" style="font-size: 20px; margin: auto 5px;"></i>
                    <li class="breadcrumb-item"> <a>Trang chủ</a></li>
                    <li class="breadcrumb-item"> <a>Nhân viên kinh doanh</a></li>
                    <li class="breadcrumb-item"> <a>Hợp đồng - Biên bản mẫu</a></li>
                    <li class="breadcrumb-item active" aria-current="page"> Thêm mẫu hợp đồng</li>
                </ol>
            </nav>
            <h1 class="typeHead">TẢI HỢP ĐỒNG MẪU</h1>
        </div>
    }
    else
    {
        <link href="~/php/style.css" rel="stylesheet" />
        Layout = "_Layout";

        <div class=" block justify-between items-center p-4  mt-4 mb-6 bg-white rounded-2xl shadow-xl shadow-gray-200 lg:p-5 sm:flex">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <i class="ph-bold ph-house" style="font-size: 20px; margin: auto 5px;"></i>
                    <li class="breadcrumb-item"> <a>Trang chủ</a></li>
                    <li class="breadcrumb-item"><a>Hợp đồng - Biên bản mẫu</a></li>
                    <li class="breadcrumb-item active" aria-current="page"> Thêm mẫu hợp đồng</li>
                </ol>
            </nav>
            <h1 class="typeHead">TẢI HỢP ĐỒNG MẪU</h1>
        </div>
    }
    <div class="row mt-4">
            <form class="form" method="post" enctype="multipart/form-data" id="FormPostTContract" asp-action="AddTContract" asp-controller="BusinessStaff">
                <input asp-for="File" type="file" accept=".pdf" id="pdfInput" style="display:none;" required>
                <img width="64" height="64" style="margin-bottom:15px" src="~/Images/pdf_icon.png" alt="external-pdf-file-types-others-iconmarket" />
                <button type="button" class="button-22" id="uploadIcon">TẢI PDF</button>
                <br />
                <section>
                    <div style="display: flex; justify-content: space-evenly;">
                    <button type="submit" class="button-22" id="saveButton" style="display:none;" onclick="saveData()">
                            Lưu  @if (TempData["SweetType"] != null && TempData["SweetIcon"] != null && TempData["SweetTitle"] != null)
                            {
                                <script>
                                    document.addEventListener('DOMContentLoaded', function () {
                                        var sweetData = {
                                            title: '@TempData["SweetTitle"]',
                                            text: '@TempData["SweetText"]',
                                            icon: '@TempData["SweetIcon"]'
                                        };

                                        Swal.fire({
                                            title: sweetData.title,
                                            text: sweetData.text,
                                            icon: sweetData.icon,
                                            showCancelButton: false,
                                            allowOutsideClick: false,
                                            confirmButtonColor: "green",
                                            confirmButtonText: "Ok"
                                        }).then(function () {
                                            // Handle any additional logic after the SweetAlert is closed.
                                        });
                                    });
                                </script>
                            }
                        </button>
                    </div>
                </section>
            </form>

    </div>
</div>


<script>
    const iconLoading = document.getElementById("loading");

    const showLoading = () => {
        iconLoading.style.display = "flex";
    };

    const hideLoading = () => {
        iconLoading.style.display = "none";
    };

    const saveData = () => {
        // Show loading icon when saving starts
        showLoading();

        // Simulate a save operation (you should replace this with your actual save logic)
        setTimeout(() => {
            // Hide loading icon when save operation is complete
            hideLoading();
        }, 3000); // Assuming 2000 milliseconds (2 seconds) for demonstration purposes
    };

    document.getElementById('uploadIcon').addEventListener('click', function () {
        document.getElementById('pdfInput').click();
    });

    document.getElementById('pdfInput').addEventListener('change', function () {
        var fileInput = document.getElementById('pdfInput');
        var saveButton = document.getElementById('saveButton');

        if (fileInput.files.length > 0) {
            var uploadedFileName = fileInput.files[0].name;

            // Show loading before processing
            showLoading();

            setTimeout(function () {
                showSuccessAlert(uploadedFileName);
                saveButton.style.display = 'block';
                // Hide loading after successful processing
                hideLoading();
            }, 2000);
        } else {
            setTimeout(function () {
                showErrorAlert(uploadedFileName);
                saveButton.style.display = 'none';
                // Hide loading after processing (whether successful or not)
                hideLoading();
            }, 2000);
        }
    });

    function showSuccessAlert(uploadedFileName) {
        // Hiển thị SweetAlert với thông báo thành công và tên tệp
        Swal.fire({
            icon: 'success',
            title: 'Thành công!',
            text: 'Tệp ' + uploadedFileName + ' đã được chọn thành công.',
            confirmButtonText: 'OK'
        });
    }


    function showErrorAlert(uploadedFileName) {
        // Hiển thị SweetAlert với thông báo không thành công
        Swal.fire({
            icon: 'error',
            title: 'Không thành công!',
            text: 'Lưu tệp ' + uploadedFileName + 'không thành công',
            confirmButtonText: 'OK'
        });
    }
 
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.min.js"></script>
<script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.min.js"></script>
<script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popperjs/core@2.9.1/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>