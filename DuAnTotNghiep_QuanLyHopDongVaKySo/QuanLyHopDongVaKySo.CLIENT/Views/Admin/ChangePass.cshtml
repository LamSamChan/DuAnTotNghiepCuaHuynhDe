@{
    Layout = "_AdminLayout";
}

<div class="container-fluid" style="height: 100vh;">
    <div class=" block justify-between items-center p-4  mt-4 mb-6 bg-white rounded-2xl shadow-xl shadow-gray-200 lg:p-5 sm:flex rounded">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <i class="ph-bold ph-house" style="font-size: 20px; margin: auto 5px;"></i>
                <li class="breadcrumb-item"> <a>Trang chủ</a></li>
                <li class="breadcrumb-item active" aria-current="page"> Cá nhân</li>
            </ol>
        </nav>
        <h1 class="typeHead">THAY ĐỔI MẬT KHẨU</h1>
    </div>
    <div class="changPassForm rounded">
        <h4 class="td">THAY ĐỔI MẬT KHẨU</h4>
        <div class="row g-3 p-5">
            <div class="mb-3 password-container">
                <label for="passOld" class="form-label">Nhập mật khẩu cũ</label>
                <div class="input-container">
                    <input type="password" class="form-control" id="passOld" required minlength="8">
                    <div class="eye-icon" onclick="togglePasswordVisibility()">
                        <i class="ph-bold ph-eye-slash" id="eyeIcon"></i>
                    </div>
                </div>
            </div>

            <div class="mb-3  password-container">
                <label for="passNew" class="form-label">Nhập mật khẩu mới</label>
                <div class="input-container">
                    <input type="password" class="form-control" id="passNew" oninput="checkMatch()" required minlength="8">
                    <div class="eye-icon" onclick="togglePasswordVisibility1()">
                        <i class="ph-bold ph-eye-slash" id="eyeIcon1"></i>
                    </div>
                </div>
            </div>
            <p id="message1"></p>
            <div class="mb-3 password-container">
                <label for="ConfirmPassNew" class="form-label">Xác nhận mật khẩu</label>
                <div class="input-container">
                    <input type="password" class="form-control" id="ConfirmPassNew" oninput="checkMatch()" required minlength="8">
                    <div class="eye-icon" onclick="togglePasswordVisibility2()">
                        <i class="ph-bold ph-eye-slash" id="eyeIcon2"></i>
                    </div>
                </div>
            </div>
            <p id="message"></p>
            <div class="mb-6">
                <button class="btn btn-primary" style="width: 100%; margin-top:10px" id="changePass" onclick="changePassAction()" disabled>
                    THAY ĐỔI MẬT KHẨU
                </button>
            </div>
        </div>
        <hr />
        <div class="getOTP">
            <h4 class="td">NHẬP MÃ OTP</h4>
            <div class="otp-container">
                <input class="otp-input" type="text" maxlength="1" oninput="handleInput(this, 2)" id="inputOtp1">
                <input class="otp-input" type="text" maxlength="1" oninput="handleInput(this, 3)" id="inputOtp2">
                <input class="otp-input" type="text" maxlength="1" oninput="handleInput(this, 4)" id="inputOtp3">
                <input class="otp-input" type="text" maxlength="1" oninput="handleInput(this, 5)" id="inputOtp4">
                <input class="otp-input" type="text" maxlength="1" oninput="handleInput(this, 6)" id="inputOtp5">
                <input class="otp-input" type="text" maxlength="1" oninput="handleInput(this, 7)" id="inputOtp6">
            </div>
            <script>

                function handleInput(input, nextInputIndex) {
                    const maxLength = parseInt(input.getAttribute('maxlength'), 10);
                    const inputValue = input.value;

                    if (inputValue.length === maxLength) {
                        const nextInput = document.querySelector(`.otp-input:nth-child(${nextInputIndex})`);

                        if (nextInput) {
                            nextInput.focus();
                        }
                    } else if (inputValue.length === 0) {
                        const previousInputIndex = nextInputIndex - 2; // 1-based index to 0-based index
                        const previousInput = document.querySelector(`.otp-input:nth-child(${previousInputIndex})`);

                        if (previousInput) {
                            previousInput.focus();
                        }
                    }
                    checkAllInputs()
                }
                // kiểm tra nhập đủ text box hay chưa
                function checkAllInputs() {
                    const inputs = document.querySelectorAll('.otp-input');
                    const isAllFilled = Array.from(inputs).every(input => input.value.length === 1);

                    const button = document.getElementById('changePass');
                    button.disabled = !isAllFilled;
                }

                function handleClick(event) {

                    event.preventDefault();

                    // You can perform additional actions here


                }
            </script>
            <div class="row justify-content-around">
                <button class="btn-addRole" type="submit" id="myButton" onclick="handleClick(event)">
                    Lấy mã OTP
                </button>
            </div>
        </div>
    </div>
</div>
@if (TempData["SweetType"] != null && TempData["SweetIcon"] != null && TempData["SweetTitle"] != null)
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var sweetData = {
                title: '@TempData["SweetTitle"]',
                text: '@TempData["SweetText"]',
                icon: '@TempData["SweetIcon"]'
            };

            Swal.fire({
                title: sweetData.title,
                text: sweetData.text,
                icon: sweetData.icon,
                showCancelButton: false,
                allowOutsideClick: false,
                confirmButtonColor: "green",
                confirmButtonText: "Ok"
            }).then(function () {
                // Handle any additional logic after the SweetAlert is closed.
            });
        });
    </script>
}

<script>
    function togglePasswordVisibility() {
        var passwordInput = document.getElementById("passOld");
        var eyeIcon = document.getElementById("eyeIcon");

        if (passwordInput.type === "password") {
            passwordInput.type = "text";
            eyeIcon.classList.remove("ph-eye-slash");
            eyeIcon.classList.add("ph-eye");
        } else {
            passwordInput.type = "password";
            eyeIcon.classList.remove("ph-eye");
            eyeIcon.classList.add("ph-eye-slash");
        }
    }
    function togglePasswordVisibility1() {
        var passwordInput1 = document.getElementById("passNew");
        var eyeIcon = document.getElementById("eyeIcon1");

        if (passwordInput1.type === "password") {
            passwordInput1.type = "text";
            eyeIcon.classList.remove("ph-eye-slash");
            eyeIcon.classList.add("ph-eye");
        } else {
            passwordInput1.type = "password";
            eyeIcon.classList.remove("ph-eye");
            eyeIcon.classList.add("ph-eye-slash");
        }
    }
    function togglePasswordVisibility2() {
        var passwordInput2 = document.getElementById("ConfirmPassNew");
        var eyeIcon = document.getElementById("eyeIcon2");

        if (passwordInput2.type === "password") {
            passwordInput2.type = "text";
            eyeIcon.classList.remove("ph-eye-slash");
            eyeIcon.classList.add("ph-eye");
        } else {
            passwordInput2.type = "password";
            eyeIcon.classList.remove("ph-eye");
            eyeIcon.classList.add("ph-eye-slash");
        }
    }






    let isButtonDisabled = false;

    function handleClick(event) {
        $.ajax({
            url: '@Url.Action("GetOTP")',
            type: 'GET',
            contentType: 'application/json',
            success: function (result) {
                if (!result.success) {
                    const button = document.getElementById('myButton');
                    if (!isButtonDisabled) {
                        const countdownSpan = document.createElement('span');
                        countdownSpan.className = 'countdown';
                        button.appendChild(countdownSpan);

                        disableButtonForSeconds(180, countdownSpan);
                        button.style.cursor = 'not-allowed';
                    }

                }
            },
            error: function () {
                console.error('Lỗi khi gửi yêu cầu.');
            }
        });
    }

    function disableButtonForSeconds(seconds, countdownSpan) {
        isButtonDisabled = true;
        document.getElementById('myButton').classList.add('disabled');

        let secondsRemaining = seconds;

        const countdownInterval = setInterval(() => {
            const minutes = Math.floor(secondsRemaining / 60);
            const remainingSeconds = secondsRemaining % 60;

            if (secondsRemaining <= 0) {
                clearInterval(countdownInterval);
                isButtonDisabled = false;
                document.getElementById('myButton').classList.remove('disabled');
                document.getElementById('myButton').style.cursor = 'pointer';
                countdownSpan.remove();
            } else {
                countdownSpan.textContent = ` (${minutes}p ${remainingSeconds}s)`;
                secondsRemaining--;
            }
        }, 1000);
    }

    function changePassAction() {
        var otp = $('#inputOtp1').val() + $('#inputOtp2').val() + $('#inputOtp3').val() + $('#inputOtp4').val() + $('#inputOtp5').val() + $('#inputOtp6').val();

        var changePassword = {
            Password: $('#passOld').val(),
            NewPassword: $('#passNew').val(),
            ConfirmNewPassword: $('#ConfirmPassNew').val(),
            EmployeeID: '',
            ComfirmOTP: otp
        };

        $.ajax({
            url: '@Url.Action("ChangePassAction")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(changePassword),
            success: function (result) {
                if (!result.success) {
                    // SweetAlert for success
                    Swal.fire({
                        title: 'Success!',
                        text: 'Bạn thay đổi mật khẩu thành công.',
                        icon: 'success',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        // Redirect to the desired page on success
                        if (result.isConfirmed) {
                            var redirectToUrl = '@Url.Action("Index")';
                            window.location.href = redirectToUrl;
                        }
                    });
                } else {
                    // SweetAlert for failure
                    Swal.fire({
                        title: 'Error!',
                        text: 'Bạn thay đổi mật khẩu bị lỗi. Vui lòng kiểm tra mật khẩu lại.',
                        icon: 'error',
                        confirmButtonColor: '#d33',
                        confirmButtonText: 'OK'
                    });
                }
            },
            error: function () {
                console.error('Error sending request.');

                // SweetAlert for generic error
                Swal.fire({
                    title: 'Error!',
                    text: 'An unexpected error occurred.',
                    icon: 'error',
                    confirmButtonColor: '#d33',
                    confirmButtonText: 'OK'
                });
            }
        });
    }


    // so sanh hai box input pass
    function checkMatch() {
        const password1 = document.getElementById('passNew').value;
        const password2 = document.getElementById('ConfirmPassNew').value;
        const message = document.getElementById('message');
        const message1 = document.getElementById('message1');
        //Chech độ dài ký tự
        if (password1.length < 8) {
            message1.textContent = 'Mật khẩu mới phải có ít nhất 8 ký tự';
            message1.className = 'mismatch';
            message1.style.display = 'contents';
        } else {
            message1.textContent = '';
            message1.style.display = 'none';
        }


        //so sánh 2 input pass
        if (password1 === password2) {
            message.textContent = 'Passwords trùng khớp';
            message.className = 'match';
            message.style.display = 'contents';
        } else if (password1 !== password2) {
            message.textContent = 'Passwords không trùng khớp';
            message.className = 'mismatch';
            message.style.display = 'contents';
        }
    }

</script>