@model QuanLyHopDongVaKySo.CLIENT.ViewModels.VMAdminListUsersAccount

@{
    Layout = "_AdminLayout";
}
    
@* <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" /> *@

<div class="container-fluid">
    <div class=" block justify-between items-center p-4  mt-4 mb-6 bg-white rounded-2xl shadow-xl shadow-gray-200 lg:p-5 sm:flex">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <i class="ph-bold ph-house" style="font-size: 20px; margin: auto 5px;"></i>
                <li class="breadcrumb-item"> <a>Trang chủ</a></li>
                <li class="breadcrumb-item"> <a>Quản lý tài khoản người dùng</a></li>
                <li class="breadcrumb-item active" aria-current="page"> Danh sách khách hàng</li>
            </ol>
        </nav>
        <h1 class="typeHead">TẤT CẢ DANH SÁCH</h1>
        <div class="row justify-content-around">
            <input type="search" id="searchInput" class="src" placeholder="Tìm kiếm trong danh sách" />
            <a class="button-save col-md-2 offset-md-7" asp-action="AddCus" asp-controller="BusinessStaff">
                THÊM KHÁCH HÀNG
                <i class="ph-bold ph-plus"></i>
            </a>
        </div>
    </div>
    <div class="row bg-white mt-3 rounded mx-auto my-auto">
        <div class="listTable">
            <table class="table display" id="myTable">
                <thead>
                    <tr style="color: #8B909A;">
                        <th scope="col">HÀNH ĐỘNG</th>
                        <th scope="col">ID</th>
                        <th scope="col">HỌ VÀ TÊN</th>
                        <th scope="col">EMAIL</th>
                        <th scope="col">SỐ ĐIỆN THOẠI</th>
                        <th scope="col">CCCD/CMND</th>
                        <th scope="col">TRẠNG THÁI</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody class="table-group-divider">
                    @foreach (var cus in Model.Customers)
                    {
                        <tr>
                            <td>
                                <div class="row action">
                                    <a asp-route-customerID="@cus.CustomerId" asp-action="EditCus" asp-controller="BusinessStaff"><i class="ph-bold ph-note-pencil"></i></a>
                                </div>
                            </td>
                            <th scope="row">@cus.CustomerId.ToString().Substring(0, 8)</th>
                            <td>@cus.FullName</td>
                            <td>@cus.Email</td>
                            <td>@cus.PhoneNumber</td>
                            <td>@cus.Identification</td>
                            <td>
                                @if (cus.IsLocked)
                                {
                                    <div class="d-flex align-items-center">
                                        <div style="width: 5px; height: 5px; background-color: red; border-radius: 50%; margin-right: 10px;"></div>
                                        <span>Đã khoá</span>
                                    </div>
                                }
                                else
                                {
                                    <div class="d-flex align-items-center">
                                        <div style="width: 5px; height: 5px; background-color: #00C9A7; border-radius: 50%; margin-right: 10px;"></div>
                                        <span>Đang hoạt động</span>
                                    </div>
                                }
                            </td>
                            <td>
                                <a asp-action="DetailsCus" asp-controller="BusinessStaff" asp-route-customerID="@cus.CustomerId">Chi tiết</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

    </div>
</div>
<script type="text/javascript">

    $(document).ready(function () {
        // Khởi tạo DataTable
        $('#myTable').DataTable({
            "searching": false,
            "info": false,
            "lengthMenu": [10, 25, 50, 100],
            "pageLength": 25,
            "language": {
                "decimal": "",
                "paginate": {
                    "first": "Đầu tiên",
                    "last": "Cuối cùng",
                    "next": "Sau",
                    "previous": "Trước"
                },
                "lengthMenu": "Hiển thị _MENU_ dữ liệu",
                "emptyTable": "Không có dữ liệu"
            }
        });
    });

    // tìm kiếm
    document.addEventListener('DOMContentLoaded', function () {
        // Lấy đối tượng ô tìm kiếm và bảng
        var input = document.getElementById('searchInput');
        var table = document.getElementById('myTable');

        // Thêm sự kiện 'input' cho ô tìm kiếm
        input.addEventListener('input', function () {
            // Gọi hàm filterTable khi người dùng nhập liệu
            filterTable();
        });

        function filterTable() {
            // Lấy giá trị từ ô tìm kiếm và chuyển đổi thành chữ thường
            var filter = input.value.toLowerCase();

            // Lấy tất cả các dòng trong tbody của bảng
            var rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

            // Lặp qua từng dòng và ẩn hoặc hiển thị dựa trên từ khóa tìm kiếm
            for (var i = 0; i < rows.length; i++) {
                var rowData = rows[i].innerText.toLowerCase();
                if (rowData.includes(filter)) {
                    rows[i].style.display = '';
                } else {
                    rows[i].style.display = 'none';
                }
            }
        }
    });
</script>
@if (TempData["SweetType"] != null && TempData["SweetIcon"] != null && TempData["SweetTitle"] != null)
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var sweetData = {
                title: '@TempData["SweetTitle"]',
                text: '@TempData["SweetText"]',
                icon: '@TempData["SweetIcon"]'
            };
            Swal.fire({
                title: sweetData.title,
                text: sweetData.text,
                icon: sweetData.icon,
                showCancelButton: false,
                allowOutsideClick: false,
                confirmButtonColor: "green",
                confirmButtonText: "Ok"
            }).then(function () {
                // Handle any additional logic after the SweetAlert is closed.
            });
        });
    </script>
}
