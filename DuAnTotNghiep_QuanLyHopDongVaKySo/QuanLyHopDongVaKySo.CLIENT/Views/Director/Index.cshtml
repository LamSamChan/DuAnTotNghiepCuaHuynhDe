 @model QuanLyHopDongVaKySo.CLIENT.ViewModels.VMPersonalPage
@{
}
<!-- ssss-->
<script src="https://code.jquery.com/jquery-3.4.0.min.js" integrity="sha256-BJeo0qm959uMBGb65z40ejJYGSgR7REI4+CW1fNKwOg=" crossorigin="anonymous"></script>

<!-- SuperSignature : Script (required) -->
<script language="javascript" type="text/javascript" src="~/Scripts/ss.js"></script>
<!-- [[[ ***********  IMPORTANT: DONOT USE THIS SS.JS ON PRODUCTION;
     USE THE ONE AVAILABLE TO DOWNLOAD FROM YOUR DASHBOARD (POST PURCHASE) ************* ]]] -->
<!-- BOOTSTRAP 4 -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
@* <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
 *@
<div class="container-fluid">
    <div class=" block justify-between items-center p-4  mt-4 mb-6 bg-white rounded-2xl shadow-xl shadow-gray-200 lg:p-5 sm:flex">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <i class="ph-bold ph-house" style="font-size: 20px; margin: auto 5px;"></i>
                <li class="breadcrumb-item"> <a>Trang chủ</a></li>
                <li class="breadcrumb-item active" aria-current="page"> Cá nhân</li>
            </ol>
        </nav>
        <h1 class="typeHead">THÔNG TIN CÁ NHÂN</h1>
        <div class="row">
            <a class="button-design col-md-2" asp-action="ChangePass" asp-controller="Director">ĐỔI MẬT KHẨU</a>
        </div>
    </div>

    <div class="row justify-content-around mt-3">
        <div class="col-md-4">
            <div class="bg-white shadow-lg shadow-gray-200 rounded-2xl p-4 mb-6 rounded" style="height: 200px; display: flex;">
                <div class="items-center sm:flex xl:block 2xl:flex sm:space-x-4 xl:space-x-0 2xl:space-x-4" style="display:flex;">
                    @if (Model.Employee.Image == null)
                    {
                        if (Model.Employee.Gender == 1)
                        {
                            <img class="mb-4 w-28 h-28 rounded-lg sm:mb-0 xl:mb-4 2xl:mb-0 shadow-lg shadow-gray-300" src="~/Avatars/blank_avatar_man.png" alt="Avatar">
                        }
                        else
                        {
                            <img class="mb-4 w-28 h-28 rounded-lg sm:mb-0 xl:mb-4 2xl:mb-0 shadow-lg shadow-gray-300" src="~/Avatars/blank_avatar_woman.png" alt="Avatar">

                        }
                    }
                    else
                    {
                        <img class="mb-4 w-28 h-28 rounded-lg sm:mb-0 xl:mb-4 2xl:mb-0 shadow-lg shadow-gray-300" src="~/@Model.Employee.Image" alt="Avatar" />
                    }
                    <div style="margin: auto 10px;">
                        <h3 class="mb-1 text-2xl font-bold text-gray-900">
                            @Model.Employee.FullName
                        </h3>
                        <div class="text-base font-normal text-gray-500">
                            @foreach (var p in Model.Positions)
                            {

                                @if (p.PositionID == Model.Employee.PositionID)
                                {
                                    @p.PositionName
                                }
                            }
                        </div>
                        <form enctype="multipart/form-data" asp-action="UpdateInfo" asp-controller="Director" method="post" class="row justify-content-around" style="margin:auto;">
                            <label for="file-upload-avt" class="custom-file-upload col-7" role="button">
                                <i class="ph-bold ph-cloud-arrow-up"></i>
                                UPLOAD
                            </label>
                            <button class="Save_btn col-4" role="button" type="submit">LƯU
                                @if (TempData["SweetType"] != null && TempData["SweetIcon"] != null && TempData["SweetTitle"] != null)
                                {
                                    <script>
                                        document.addEventListener('DOMContentLoaded', function () {
                                            var sweetData = {
                                                title: '@TempData["SweetTitle"]',
                                                text: '@TempData["SweetText"]',
                                                icon: '@TempData["SweetIcon"]'
                                            };
                                            Swal.fire({
                                                title: sweetData.title,
                                                text: sweetData.text,
                                                icon: sweetData.icon,
                                                showCancelButton: false,
                                                allowOutsideClick: false,
                                                confirmButtonColor: "green",
                                                confirmButtonText: "Ok"
                                            }).then(function () {
                                                // Handle any additional logic after the SweetAlert is closed.
                                            });
                                        });
                                    </script>
                                }

                            </button>
                            <input id="file-upload-avt" type="file" accept="image/*" asp-for="@Model.Employee.ImageFile" />
                            <input type="text" class="form-input d-none" asp-for="@Model.Employee.EmployeeId" readonly>
                            <input class="form-input d-none" asp-for="@Model.Employee.IsFirstLogin" readonly>
                            <span class="text-danger" asp-validation-for="@Model.Employee.ImageFile"></span>
                        </form>
                    </div>
                </div>
            </div>
            <div class="bg-white shadow-lg shadow-gray-200 rounded-2xl p-4 mb-6 mt-3 rounded">
                <h4 class="typeHead">Tạo chữ ký tự động</h4>
                <div class="mb-3">
                    <div class="input-group">
                        <span class="input-group-text" id="basic-addon3">
                            <input type="color" id="textColorPicker" value="#000000" />
                        </span>
                        <input type="text" class="form-control" id="textInput" placeholder="Nhập chữ vào đây">
                    </div>
                </div>
                <div class="row">
                    <button class="button-design col-3" onclick="convertToImage()">Chuyển đổi</button>
                    <button class="button-save col-2" onclick="saveTextSignature()">Lưu</button>

                </div>
                <div id="imageContainer"></div>
            </div>


            <div class="bg-white shadow-lg shadow-gray-200 rounded-2xl p-4 mb-6 mt-3 rounded">
                <h4 class="typeHead">Chữ ký mặc định</h4>
                <div style="margin:auto;">
                    <ul class="list-unstyled d-flex flex-wrap justify-content-center p-0">
                        @if (Model.PFXCertificate.DefaultImageSignature != null)
                        {
                            <li class="avt mx-auto">
                                <img src="~/@Model.PFXCertificate.DefaultImageSignature" alt="@Model.PFXCertificate.DefaultImageSignature" class="gallery-item" width="100%" height="300" />
                                <div class="overlay">
                                    <div class="row justify-content-around">
                                        <a class="col button-delete" asp-action="DeleteDefaultSignature" asp-controller="Director" asp-route-filePath="@Model.PFXCertificate.DefaultImageSignature">
                                            Xóa  @if (TempData["SweetType"] != null && TempData["SweetIcon"] != null && TempData["SweetTitle"] != null)
                                            {
                                                <script>
                                                    document.addEventListener('DOMContentLoaded', function () {
                                                        var sweetData = {
                                                            title: '@TempData["SweetTitle"]',
                                                            text: '@TempData["SweetText"]',
                                                            icon: '@TempData["SweetIcon"]'
                                                        };

                                                        console.log("Sweet Data:", sweetData);

                                                        Swal.fire({
                                                            title: sweetData.title,
                                                            text: sweetData.text,
                                                            icon: sweetData.icon,
                                                            showCancelButton: false,
                                                            allowOutsideClick: false,
                                                            confirmButtonColor: "green",
                                                            confirmButtonText: "Ok"
                                                        }).then(function () {
                                                            // Handle any additional logic after the SweetAlert is closed.
                                                        });
                                                    });
                                                </script>
                                            }
                                        </a>
                                    </div>
                                </div>
                            </li>
                        }
                        else
                        {
                            <li class="avt mx-auto">
                                <img src="~/Resource/Image/empty.png" class="gallery-item" width="100%" height="300" />
                            </li>
                        }
                    </ul>
                </div>
            </div>
            <div class="bg-white shadow-lg shadow-gray-200 rounded-2xl p-4 mb-6 mt-3 rounded" id="scrollable-list">
                <div class="row">
                    <h4 class="typeHead"> Tải ảnh chữ ký</h4>
                    <form enctype="multipart/form-data" asp-action="UploadSignature" asp-controller="Director" method="post" class="row">
                        <label for="file-upload-id" class="custom-file-upload col-6" role="button">
                            <i class="ph-bold ph-cloud-arrow-up" style="font-size:30px;"></i>
                        </label>
                        <button class="Save_btn col-2" role="button" type="submit">LƯU
                            @if (TempData["SweetType"] != null && TempData["SweetIcon"] != null && TempData["SweetTitle"] != null)
                            {
                                <script>
                                    document.addEventListener('DOMContentLoaded', function () {
                                        var sweetData = {
                                            title: '@TempData["SweetTitle"]',
                                            text: '@TempData["SweetText"]',
                                            icon: '@TempData["SweetIcon"]'
                                        };

                                        console.log("Sweet Data:", sweetData);

                                        Swal.fire({
                                            title: sweetData.title,
                                            text: sweetData.text,
                                            icon: sweetData.icon,
                                            showCancelButton: false,
                                            allowOutsideClick: false,
                                            confirmButtonColor: "green",
                                            confirmButtonText: "Ok"
                                        }).then(function () {
                                            // Handle any additional logic after the SweetAlert is closed.
                                        });
                                    });
                                </script>
                            }

                        </button>
                        <input id="file-upload-id" type="file" accept="image/*" asp-for="@Model.PFXCertificate.ImageFile" />
                    </form>
                </div>
                <hr />
                <h4 class="typeHead">Danh sách chữ ký</h4>
                <ul class ="d-flex flex-wrap justify-content-center" style="list-style: none;">
                    @if (Model.PFXCertificate.ImageSignature1 != null)
                    {
                        <li class="avt">
                            <img src="~/@Model.PFXCertificate.ImageSignature1" alt="@Model.PFXCertificate.ImageSignature1" class="gallery-item" width="100%" height="300" />
                            <div class="overlay">
                                <div class="row justify-content-around">
                                    <a class="col button-delete" asp-action="DeleteSignature" asp-controller="Director" asp-route-filePath="@Model.PFXCertificate.ImageSignature1">
                                        Xóa  @if (TempData["SweetType"] != null && TempData["SweetIcon"] != null && TempData["SweetTitle"] != null)
                                        {
                                            <script>
                                                document.addEventListener('DOMContentLoaded', function () {
                                                    var sweetData = {
                                                        title: '@TempData["SweetTitle"]',
                                                        text: '@TempData["SweetText"]',
                                                        icon: '@TempData["SweetIcon"]'
                                                    };

                                                    console.log("Sweet Data:", sweetData);

                                                    Swal.fire({
                                                        title: sweetData.title,
                                                        text: sweetData.text,
                                                        icon: sweetData.icon,
                                                        showCancelButton: false,
                                                        allowOutsideClick: false,
                                                        confirmButtonColor: "green",
                                                        confirmButtonText: "Ok"
                                                    }).then(function () {
                                                        // Handle any additional logic after the SweetAlert is closed.
                                                    });
                                                });
                                            </script>
                                        }
                                    </a>
                                    <a class="col button-save" asp-action="SetDefaultImageSignature" asp-controller="Director" asp-route-filePath="@Model.PFXCertificate.ImageSignature1">
                                        Đặt mặc định  @if (TempData["SweetType"] != null && TempData["SweetIcon"] != null && TempData["SweetTitle"] != null)
                                        {
                                            <script>
                                                document.addEventListener('DOMContentLoaded', function () {
                                                    var sweetData = {
                                                        title: '@TempData["SweetTitle"]',
                                                        text: '@TempData["SweetText"]',
                                                        icon: '@TempData["SweetIcon"]'
                                                    };

                                                    console.log("Sweet Data:", sweetData);

                                                    Swal.fire({
                                                        title: sweetData.title,
                                                        text: sweetData.text,
                                                        icon: sweetData.icon,
                                                        showCancelButton: false,
                                                        allowOutsideClick: false,
                                                        confirmButtonColor: "green",
                                                        confirmButtonText: "Ok"
                                                    }).then(function () {
                                                        // Handle any additional logic after the SweetAlert is closed.
                                                    });
                                                });
                                            </script>
                                        }
                                    </a>
                                </div>
                            </div>
                        </li>
                    }
                    else
                    {

                        <li class="avt">
                            <img src="~/Resource/Image/empty.png" class="gallery-item" width="100%" height="300" />
                        </li>
                    }
                    @if (Model.PFXCertificate.ImageSignature2 != null)
                    {
                        <li class="avt">
                            <img src="~/@Model.PFXCertificate.ImageSignature2" alt="@Model.PFXCertificate.ImageSignature2" class="gallery-item" width="100%" height="300" />
                            <div class="overlay">
                                <div class="row justify-content-around">
                                    <a class="col button-delete" asp-action="DeleteSignature" asp-controller="Director" asp-route-filePath="@Model.PFXCertificate.ImageSignature2">Xóa</a>
                                    <a class="col button-save" asp-action="SetDefaultImageSignature" asp-controller="Director" asp-route-filePath="@Model.PFXCertificate.ImageSignature2">Đặt mặc định</a>
                                </div>
                            </div>
                        </li>
                    }
                    else
                    {

                        <li class="avt">
                            <img src="~/Resource/Image/empty.png" class="gallery-item " width="100%" height="300" />
                        </li>
                    }
                    @if (Model.PFXCertificate.ImageSignature3 != null)
                    {
                        <li class="avt">
                            <img src="~/@Model.PFXCertificate.ImageSignature3" alt="@Model.PFXCertificate.ImageSignature3" class="gallery-item" width="100%" height="300" />
                            <div class="overlay">
                                <div class="row justify-content-around">
                                    <a class="col button-delete" asp-action="DeleteSignature" asp-controller="Director" asp-route-filePath="@Model.PFXCertificate.ImageSignature3">Xóa</a>
                                    <a class="col button-save" asp-action="SetDefaultImageSignature" asp-controller="Director" asp-route-filePath="@Model.PFXCertificate.ImageSignature3">Đặt mặt định</a>
                                </div>
                            </div>
                        </li>
                    }
                    else
                    {

                        <li class="avt">
                            <img src="~/Resource/Image/empty.png" class="gallery-item " width="100%" height="300" />

                        </li>
                    }
                    @if (Model.PFXCertificate.ImageSignature4 != null)
                    {
                        <li class="avt">
                            <img src="~/@Model.PFXCertificate.ImageSignature4" alt="@Model.PFXCertificate.ImageSignature4" class="gallery-item" width="100%" height="300" />
                            <div class="overlay">
                                <div class="row justify-content-around">
                                    <a class="col button-delete" asp-action="DeleteSignature" asp-controller="Director" asp-route-filePath="@Model.PFXCertificate.ImageSignature4">Xóa</a>
                                    <a class="col button-save" asp-action="SetDefaultImageSignature" asp-controller="Director" asp-route-filePath="@Model.PFXCertificate.ImageSignature4">Đặt mặt định</a>
                                </div>
                            </div>
                        </li>
                    }
                    else
                    {

                        <li class="avt">
                            <img src="~/Resource/Image/empty.png" class="gallery-item" width="100%" height="300" />
                        </li>
                    }
                    @if (Model.PFXCertificate.ImageSignature5 != null)
                    {
                        <li class="avt">
                            <img src="~/@Model.PFXCertificate.ImageSignature5" alt="@Model.PFXCertificate.ImageSignature5" class="gallery-item" width="100%" height="300" />
                            <div class="overlay">
                                <div class="row justify-content-around">
                                    <a class="col button-delete" asp-action="DeleteSignature" asp-controller="Director" asp-route-filePath="@Model.PFXCertificate.ImageSignature5">Xóa</a>
                                    <a class="col button-save" asp-action="SetDefaultImageSignature" asp-controller="Director" asp-route-filePath="@Model.PFXCertificate.ImageSignature5">Đặt mặt định</a>
                                </div>
                            </div>
                        </li>
                    }
                    else
                    {

                        <li class="avt">
                            <img src="~/Resource/Image/empty.png" style="width:100%" class="gallery-item " width="100%" height="300" />
                        </li>
                    }
                </ul>
            </div>

        </div>
        <div class="col-md-8">
            <div class="bg-white shadow-lg shadow-gray-200 rounded-2xl p-4 mb-6 rounded">
                <h4 class="typeHead">Thông tin cá nhân</h4>
                <form class="row justify-content-around g-3" method="post" asp-action="UpdateInfo" asp-controller="Director">
                    <div class="col-md-6">
                        <label for="inputName" class="form-label">ID</label>
                        <input type="text" class="form-control" asp-for="Employee.EmployeeId" readonly>
                    </div>
                    <div class="col-md-6">
                        <label for="inputName" class="form-label">Họ tên</label>
                        <input type="text" class="form-control" id="inputName" asp-for="Employee.FullName" readonly>
                    </div>
                    <div class="col-md-6">
                        <label for="inputEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="inputEmail" asp-for="Employee.Email" readonly>
                    </div>
                    <div class="col-md-6">
                        <label for="inputPhone" class="form-label">Số điện thoại</label>
                        <input type="text" class="form-control" id="inputPhone" maxlength="12" asp-for="Employee.PhoneNumber" required>
                    </div>
                    <div class="col-md-6">
                        <label for="inputAddress" class="form-label">CMND / CCCD</label>
                        <input type="text" placeholder="Add" class="form-control" id="inputAddress" asp-for="Employee.Identification" readonly>
                    </div>
                    <div class="col-md-6">
                        <label for="inputAddress" class="form-label">Địa chỉ</label>
                        <textarea type="text" placeholder="Add" class="form-control" id="inputAddress" asp-for="Employee.Address" required></textarea>
                    </div>
                    <div class="col-md-6">
                        <label for="inputDate" class="form-label">Ngày sinh</label>
                        <input type="date" class="form-control" id="inputDate" asp-for="Employee.DateOfBirth" required>
                    </div>
                    <div class="col-md-6">
                        <label for="inputGender" class="form-label">Giới tính</label>
                        <select id="inpuGender" class="form-select" required asp-for="Employee.Gender">
                            <option value="" disabled selected>...Chọn giới tính</option>
                            <option value="1">Nam</option>
                            <option value="2">Nữ</option>
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label for="inputRole" class="form-label">Vai trò</label>
                        <input type="text" class="form-control text-info border-info" id="inputRole" readonly value=" @foreach (var r in Model.Roles)
                               {
                                    if(r.RoleID == Model.Employee.RoleID)
                                    {
                                       @r.RoleName
                                    }
                                }">
                        <input class="d-none" readonly asp-for="Employee.RoleID">
                    </div>
                    <div class="col-md-6">
                        <label for="inputPosition" class="form-label">Chức danh</label>
                        <input type="text" class="form-control text-info border-info" id="inputPosition" readonly value="@foreach (var p in Model.Positions)
                               {
                                    if(p.PositionID == Model.Employee.PositionID)
                                    {
                                       @p.PositionName
                                    }
                                }">
                        <input class="d-none" readonly asp-for="Employee.PositionID">
                    </div>
                    <div class="col-md-6">
                        <label for="inputPhone" class="form-label">Trạng thái tài khoản</label>
                        <div>
                            @if (!Model.Employee.IsLocked)
                            {
                                <input type="radio" class="btn-check " asp-for="Employee.IsLocked" id="false" value="false" autocomplete="off" readonly checked>
                                <label class="btn btn-sm btn-outline-success text-light" id="false-label" for="false">Hoạt động</label>
                            }
                            else
                            {
                                <input type="radio" class="btn-check " asp-for="Employee.IsLocked" id="true" value="true" autocomplete="off" readonly checked>
                                <label class="btn btn-sm btn-outline-danger text-light" id="true-label" for="true">Khoá</label>
                            }
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label for="exampleFormControlTextarea1" class="form-label">Ghi chú</label>
                        <textarea type="text" class="form-control" id="exampleFormControlTextarea1" asp-for="Employee.Note" readonly rows="3"></textarea>
                    </div>
                    <button class="add_cus" style="margin:20px auto; width:50%; padding: 20px; min-height:30px; display:flex; justify-content:center; align-items:center; " type="submit">
                        Lưu thông tin  @if (TempData["SweetType"] != null && TempData["SweetIcon"] != null && TempData["SweetTitle"] != null)
                        {
                            <script>
                                document.addEventListener('DOMContentLoaded', function () {
                                    var sweetData = {
                                        title: '@TempData["SweetTitle"]',
                                        text: '@TempData["SweetText"]',
                                        icon: '@TempData["SweetIcon"]'
                                    };

                                    console.log("Sweet Data:", sweetData);

                                    Swal.fire({
                                        title: sweetData.title,
                                        text: sweetData.text,
                                        icon: sweetData.icon,
                                        showCancelButton: false,
                                        allowOutsideClick: false,
                                        confirmButtonColor: "green",
                                        confirmButtonText: "Ok"
                                    }).then(function () {
                                        // Handle any additional logic after the SweetAlert is closed.
                                    });
                                });
                            </script>
                        }
                    </button>
                </form>
            </div>
            <div class="bg-white shadow-lg shadow-gray-200 rounded-2xl p-4 mb-6 mt-3 rounded">
                <div class="row justify-content-around">
                    <h4 class="typeHead">Tạo chữ ký</h4>
                    <div class="col-md-7">
                        @await Component.InvokeAsync("SignControl")
                    </div>
                    <div class="col-md-4" id="action_Sign">
                        <div class="form-inline" style="">
                            <input type="button" id="btnUndo" class="button-design" onclick="UndoSignature('ctlSignature');" value="Hoàn tác" />&nbsp;
                            <input type="button" id="btnClear" class="button-delete" onclick="ClearSignature('ctlSignature');" value="Xóa" />&nbsp;
                            <input type="button" id="btnSave" class="button-save" onclick="ValidateSign();" value="Tạo" />&nbsp;
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>
<script type="text/javascript">
    function convertToImage() {
        var textInput = $("#textInput").val();
        var textColor = $("#textColorPicker").val();

        if (textInput) {
            var div = document.createElement("div");
            div.style.fontFamily = "YourCustomFont";
            div.style.fontSize = "300px";
            div.innerText = textInput;
            div.style.color = textColor;
            div.style.backgroundColor = "transparent"; // Set màu nền trong suốt

            document.body.appendChild(div);

            html2canvas(div, { backgroundColor: null }).then((canvas) => {
                // Create a new canvas element
                var newCanvas = document.createElement("canvas");
                var newContext = newCanvas.getContext("2d");

                // Set the size of the new canvas to match the text
                newCanvas.width = canvas.width + 10; // Thêm một giá trị tùy ý để đảm bảo không có khoảng trống
                newCanvas.height = canvas.height + 10;

                // Draw the text onto the new canvas
                newContext.drawImage(
                    canvas,
                    0,
                    0,
                    newCanvas.width,
                    newCanvas.height
                );

                // Get the image data of the new canvas
                var imageData = newContext.getImageData(
                    0,
                    0,
                    newCanvas.width,
                    newCanvas.height
                );

                // Iterate through the pixels and set the alpha value to 0 for white pixels
                for (var i = 0; i < imageData.data.length; i += 4) {
                    var isWhite =
                        imageData.data[i] === 255 &&
                        imageData.data[i + 1] === 255 &&
                        imageData.data[i + 2] === 255;
                    if (isWhite) {
                        imageData.data[i + 3] = 0; // Set alpha to 0
                    }
                }

                // Put the modified image data back onto the new canvas
                newContext.putImageData(imageData, 0, 0);

                // Convert the canvas to data URL
                var img = new Image();
                img.src = newCanvas.toDataURL();
                img.classList.add("nobg");
                var imageOutput = document.getElementById("imageContainer");
                imageOutput.innerHTML = "";
                imageOutput.appendChild(img);

                document.body.removeChild(div);
            });
        } else {
            Swal.fire({
                icon: 'warning',
                title: 'Vui lòng nhập văn bản.',
                showConfirmButton: false,
                timer: 1500
            });
        }
    }


    function saveTextSignature() {
        var textInput = $("#textInput").val();
        var textColor = $("#textColorPicker").val();

        if (textInput) {
            var div = document.createElement("div");
            div.style.fontFamily = "YourCustomFont";
            div.style.fontSize = "500px";
            div.innerText = textInput;
            div.style.color = textColor;
            div.style.backgroundColor = "transparent"; // Set màu nền trong suốt

            document.body.appendChild(div);

            html2canvas(div, { backgroundColor: null }).then((canvas) => {
                // Convert the canvas to data URL
                var imageData = canvas.toDataURL();

                // Gửi ảnh lên server để lưu
                $.ajax({
                    type: "POST",
                    url: "/Director/SaveTextSignature",
                    data: { imageData: imageData },
                    success: function (result) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Lưu thành công!',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            window.location.reload();
                        });
                    },
                    error: function (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi!',
                            text: 'Đã xảy ra lỗi khi lưu ảnh.',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            window.location.reload();
                        });
                    }
                });

                document.body.removeChild(div);
            });
        } else {
            Swal.fire({
                icon: 'warning',
                title: 'Vui lòng nhập văn bản.',
                showConfirmButton: false,
                timer: 1500
            });
        }
    }



    $(document).ready(function () {
        $('#file-upload-avt').change(function () {
            var fileName = $(this).val().split('\\').pop();

            // Kiểm tra xem người dùng đã chọn tệp hay chưa
            if (fileName) {
                // Nếu có giá trị, hiển thị thông báo thành công
                Swal.fire({
                    title: 'Tải tệp lên thành công!',
                    text: 'Bạn đã tải tệp lên với tên: ' + fileName,
                    icon: 'success',
                    confirmButtonText: 'OK'
                });
            } else {
                // Nếu không có giá trị, hiển thị thông báo lỗi
                Swal.fire({
                    title: 'Lỗi!',
                    text: 'Vui lòng chọn một tệp để tải lên.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });
    });

    $(document).ready(function () {
        $('#file-upload-id').change(function () {
            var fileName = $(this).val().split('\\').pop();

            // Kiểm tra xem người dùng đã chọn tệp hay chưa
            if (fileName) {
                // Nếu có giá trị, hiển thị thông báo thành công
                Swal.fire({
                    title: 'Tải tệp lên thành công!',
                    text: 'Bạn đã tải tệp lên với tên: ' + fileName,
                    icon: 'success',
                    confirmButtonText: 'OK'
                });
            } else {
                // Nếu không có giá trị, hiển thị thông báo lỗi
                Swal.fire({
                    title: 'Lỗi!',
                    text: 'Vui lòng chọn một tệp để tải lên.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });
    });

    var statV = false;

    function StatusBar() {
        SignatureStatusBar('ctlSignature', statV);
        statV = !statV; // toggle

        // change status bar look dynamically
        $('#ctlSignature_status').css({ "color": "orangered", "font-size": "12px", "font-weight": "bold", "float": "left" });
    }

    function ValidateSign() {
        var isValid = ValidateSignature('ctlSignature');

        if (!isValid) {
            $('#ctlSignature').css("border", "2px dashed red");
        }
        else {
            $('#ctlSignature').css("border", "2px dashed green");
        }

        if (isValid === true) {
            SaveSign();
        }
    }

    function SaveSign() {

        var btnSave = $("#btnSave");

        btnSave.prop('disabled', true);

        var ctlSignature = { Data: $("#ctlSignature_data").val(), Smooth: $("#ctlSignature_data_smooth").val() };

        $.ajax({
            url: "/Director/SaveSignature/",
            data: JSON.stringify(ctlSignature),
            contentType: "application/json",
            type: 'POST',
            cache: false,
            success: function (data) {
                $("#imgSign").attr("src", "/Signs/" + data);
            },
            error: function (textStatus, errorThrown) {
                Swal.fire({
                    icon: 'error',
                    title: "Không thể lưu chữ ký : " + JSON.stringify(textStatus) + " : " + errorThrown,
                    showConfirmButton: false,
                    timer: 1500
                }).then(() => {

                });
            }
        });

        btnSave.prop('disabled', false);
        window.location.reload();
    }

    function objctlSignature_status(success, points) {
        $("#liStatus").html("<strong>Signature done? : " + success + ", with " + points + " points.</strong>");
    }

    $(document).ready(function () { StatusBar(); });

    $(document).ready(function () {
        $('#myCarousel').carousel({
            interval: false
        });
    });
</script>