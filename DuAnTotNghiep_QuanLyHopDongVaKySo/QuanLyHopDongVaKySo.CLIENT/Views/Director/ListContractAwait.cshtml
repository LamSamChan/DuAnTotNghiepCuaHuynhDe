
@model QuanLyHopDongVaKySo.CLIENT.ViewModels.VMListContractAwait
@{
    string userRole = Context.Request.HttpContext.Session.GetString("Role");
    string defaultImg = null;
    if (Model.PFXCertificate.DefaultImageSignature != null)
    {
        defaultImg = Model.PFXCertificate.DefaultImageSignature.Replace(@"\", @"/");
    }
}
<div class="container-fluid">
    @if (userRole == "Admin")
    {
        Layout = "_AdminLayOut";
        <div class=" block justify-between items-center p-4  mt-4 mb-6 bg-white rounded-2xl shadow-xl shadow-gray-200 lg:p-5 sm:flex">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <i class="ph-bold ph-house" style="font-size: 20px; margin: auto 5px;"></i>
                    <li class="breadcrumb-item"> <a>Trang chủ</a></li>
                    <li class="breadcrumb-item"> <a>Giám đốc</a></li>
                    <li class="breadcrumb-item active" aria-current="page"> Hợp đồng chờ duyệt</li>
                </ol>
            </nav>
            <h1 class="typeHead">TẤT CẢ DANH SÁCH</h1>
            <div class="row justify-content-between">
                <input type="search" id="searchInput" class="src" placeholder="Tìm kiếm trong danh sách" />
                <div class="col-md-3 offset-md-6 d-flex justify-content-end">
                    <a class="button-save">
                        Duyệt
                        <span id="countButton" class="badge text-bg-danger">0</span>
                    </a>
                    <a class="button-delete" data-bs-toggle="modal" data-bs-target="#RefuseSign">
                        Từ chối duyệt
                        <span id="countButton" class="badge text-bg-light">0</span>
                    </a>
                    @* <!-- Modal --> *@
                    <div class="modal fade" id="RefuseSign" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <form class="row justify-content-around" style=" margin: 0 auto;">
                                        <div class="mb-3">
                                            <label class="form-label" for="floatingTextarea2">Lý dô từ chối</label>
                                            <textarea class="form-control" placeholder="Leave a comment here" id="floatingTextarea2" style="height: 100px"></textarea>
                                        </div>
                                        <div class="col-mb-5" style="margin: auto;">
                                            <button class="button-save">
                                                Xác nhận
                                            </button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
    else
    {
        Layout = "_Layout";
        <div class=" block justify-between items-center p-4  mt-4 mb-6 bg-white rounded-2xl shadow-xl shadow-gray-200 lg:p-5 sm:flex rounded">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <i class="ph-bold ph-house" style="font-size: 20px; margin: auto 5px;"></i>
                    <li class="breadcrumb-item"> <a>Trang chủ</a></li>
                    <li class="breadcrumb-item active" aria-current="page"> Hợp đồng chờ duyệt</li>
                </ol>
            </nav>
            <h1 class="typeHead">TẤT CẢ DANH SÁCH</h1>
            <div class="row">
                <input type="search" id="searchInput" style="margin-left: 10px;" placeholder="Tìm kiếm hợp đồng" />
                <div class="col-md-3 offset-md-6 d-flex justify-content-end">
                    <a class="button-save" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                        Duyệt
                        <span id="countButton" class="badge text-light">0</span>
                    </a>
                    <a class="button-delete" data-bs-toggle="modal" data-bs-target="#RefuseSign">
                        Từ chối duyệt
                        <span id="countButtonRefuse" class="badge text-light">0</span>
                    </a>

                    @* <!-- Modal --> *@
                    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h1 class="modal-title fs-5" id="staticBackdropLabel">DUYỆT HỢP ĐỒNG</h1>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <h5>
                                        Chọn chữ ký khác
                                    </h5>
                                    <ul style="max-height:400px; overflow-y:scroll;">
                                        @if (Model.PFXCertificate.ImageSignature1 != null)
                                        {
                                            <li class="image-container" onclick="enableButton('signBtn', this,'@Model.PFXCertificate.ImageSignature1.Replace(@"\",@"/")')">
                                                <img src="~/@Model.PFXCertificate.ImageSignature1.Replace(@"\",@"/")" width="400" height="200" />
                                            </li>
                                        }
                                        @if (Model.PFXCertificate.ImageSignature2 != null)
                                        {
                                            <li class="image-container" onclick="enableButton('signBtn', this,'@Model.PFXCertificate.ImageSignature2.Replace(@"\",@"/")')">
                                                <img src="~/@Model.PFXCertificate.ImageSignature2.Replace(@"\",@"/")" width="400" height="200" />
                                            </li>
                                        }
                                        @if (Model.PFXCertificate.ImageSignature3 != null)
                                        {
                                            <li class="image-container" onclick="enableButton('signBtn', this,'@Model.PFXCertificate.ImageSignature3.Replace(@"\",@"/")')">
                                                <img src="~/@Model.PFXCertificate.ImageSignature3.Replace(@"\",@"/")" width="400" height="200" />
                                            </li>
                                        }
                                        @if (Model.PFXCertificate.ImageSignature4 != null)
                                        {
                                            <li class="image-container" onclick="enableButton('signBtn', this,'@Model.PFXCertificate.ImageSignature4.Replace(@"\",@"/")')">
                                                <img src="~/@Model.PFXCertificate.ImageSignature4.Replace(@"\",@"/")" width="400" height="200" />
                                            </li>
                                        }
                                        @if (Model.PFXCertificate.ImageSignature5 != null)
                                        {
                                            <li class="image-container" onclick="enableButton('signBtn', this,'@Model.PFXCertificate.ImageSignature5.Replace(@"\",@"/")')">
                                                <img src="~/@Model.PFXCertificate.ImageSignature5.Replace(@"\",@"/")" width="400" height="200" />
                                            </li>
                                        }
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <button class="btn btn-primary" id="signBtn" disabled>
                                        DUYỆT
                                    </button>
                                    <button class="button-save" id="signDefaultBtn">
                                        DUYỆT BẰNG CHỮ KÝ MẶT ĐỊNH
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    @* <!-- Modal --> *@
                    <div class="modal fade" id="RefuseSign" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <form class="row justify-content-around" style=" margin: 0 auto;">
                                        <div class=" mb-3">
                                            <label for="exampleFormControlTextarea1" class="form-label">Lý do từ chối</label>
                                            <textarea class="form-control" id="exampleFormControlTextarea1" rows="3"></textarea>
                                        </div>
                                        <div class="col-mb-5" style="margin: auto;">
                                            <button class="button-save">
                                                Xác nhận
                                            </button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
    <div class="row bg-white mt-4 mx-auto my-auto rounded">
        <div class="listTable">
            <table class="table" id="myTable">
                <thead>
                    <tr style="color: #8B909A;">
                        <th> <input type="checkbox" id="checkAll" /></th>
                        <th scope="col">ID</th>
                        <th scope="col">EMAIL</th>
                        <th scope="col">NGÀY ĐĂNG KÝ DỊCH VỤ</th>
                        <th scope="col">HỌ VÀ TÊN</th>
                        <th scope="col">LOẠI HỢP ĐỒNG ĐĂNG KÝ</th>
                        <th scope="col">TRẠNG THÁI</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody class="table-group-divider">
                    @foreach (var item in Model.PContracts)
                    {
                        <tr>
                            <th><input type="checkbox" class="checkbox" data-index="@item.PContractID" /></th>
                            <td>@item.PContractID</td>
                            <td>@item.CustomerEmail</td>
                            <td>@item.DateCreated</td>
                            <td>@item.CustomerName</td>
                            <td>@item.TOS_ID</td>
                            <td>
                                <div style="background: rgba(255, 198, 0, 0.20); color:#FFC600;display: flex;align-items: center;justify-content: center;">
                                    Chờ duyệt
                                </div>
                            </td>
                            <td>
                                <a asp-action="DetailsContractAwait" asp-controller="Director" asp-route-pContractId="@item.PContractID">Chi tiết</a>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>

    </div>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Lấy đối tượng ô tìm kiếm và bảng
        var input = document.getElementById('searchInput');
        var table = document.getElementById('myTable');

        // Thêm sự kiện 'input' cho ô tìm kiếm
        input.addEventListener('input', function () {
            // Gọi hàm filterTable khi người dùng nhập liệu
            filterTable();
        });

        function filterTable() {
            // Lấy giá trị từ ô tìm kiếm và chuyển đổi thành chữ thường
            var filter = input.value.toLowerCase();

            // Lấy tất cả các dòng trong tbody của bảng
            var rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

            // Lặp qua từng dòng và ẩn hoặc hiển thị dựa trên từ khóa tìm kiếm
            for (var i = 0; i < rows.length; i++) {
                var rowData = rows[i].innerText.toLowerCase();
                if (rowData.includes(filter)) {
                    rows[i].style.display = '';
                } else {
                    rows[i].style.display = 'none';
                }
            }
        }
    });
    var imagePath='';
    function enableButton(buttonId, imageContainer, imageSelected) {
        imagePath = imageSelected;

        // Lấy button và hình ảnh được chọn
        var button = document.getElementById(buttonId);

        // Loại bỏ thuộc tính disabled nếu hình ảnh được chọn
        button.removeAttribute('disabled');

        // Loại bỏ lớp 'selected' từ tất cả các hình ảnh khác
        var allImageContainers = document.querySelectorAll('.image-container');
        allImageContainers.forEach(function (container) {
            container.classList.remove('selected');
        });

        // Thêm lớp 'selected' cho hình ảnh được chọn để tạo hiệu ứng
        imageContainer.classList.add('selected');
    }

    $(document).ready(function () {
        var checkedCount = 0; // Biến để lưu trữ số lượng checkbox đã được chọn

        // Xử lý sự kiện khi checkbox all được click
        $('#checkAll').click(function () {
            $('.checkbox').prop('checked', $(this).prop('checked'));
            updateCheckedCount();
            updateCheckedCountRefuse();
        });

        // Xử lý sự kiện khi checkbox con được click
        $('.checkbox').click(function () {
            if (!$(this).prop('checked')) {
                $('#checkAll').prop('checked', false);
            }
            updateCheckedCount();
            updateCheckedCountRefuse();
        });

        // Hàm cập nhật số lượng checkbox đã được chọn và hiển thị trên button
        function updateCheckedCount() {
            checkedCount = $('.checkbox:checked').length;
            $('#countButton').text(checkedCount);
        }
        function updateCheckedCountRefuse() {
            checkedCount = $('.checkbox:checked').length;
            $('#countButtonRefuse').text(checkedCount);
        }

        var selectedObjects = [];

        // Xử lý sự kiện khi checkbox được chọn hoặc bỏ chọn
        $(".checkbox").on("change", function () {
            var id = $(this).attr("data-index");
            var isChecked = $(this).prop("checked");
            // Tạo đối tượng mới từ ID và thêm hoặc xoá đối tượng từ danh sách
            if (isChecked) {
                var newObject = createObjectFromId(id);
                selectedObjects.push(newObject);
            } else {
                selectedObjects = selectedObjects.filter(function (obj) {
                    return obj.id !== id;
                });
            }
        });

        // Hàm tạo đối tượng mới từ ID (Thay thế logic này bằng logic của bạn)
        function createObjectFromId(id) {
            // Thực hiện tạo signing model 
            return {
                Serial: '@Model.PFXCertificate.Serial',
                IdFile: id,
                Base64StringFile: '',
                ImagePath: '',
                Base64StringFileStamp: '',
                ImagePathStamp: ''
            };
            
        }

        // Xử lý sự kiện khi nút Gửi được nhấn
        $("#signBtn").on("click", function () {
            // Gửi danh sách đối tượng đã chọn lên server qua Ajax
            if(imagePath != ''){
                selectedObjects.forEach(function (obj) {
                    obj.ImagePath = imagePath; // Thay thế bằng giá trị mới của ImagePath
                });
            }else{
                alert("Bạn chưa chọn chữ ký!!")
            }
            console.log(JSON.stringify(selectedObjects));
            $.ajax({
                url: '/Director/SignListContract',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(selectedObjects),
                success: function (result) {
                    // Chuyển hướng tới trang mong muốn
                    var redirectToUrl = '@Url.Action("ListContractAwait", "Director")';
                    window.location.href = redirectToUrl;
                },
                error: function (error) {
                    // Chuyển hướng tới trang mong muốn
                    var redirectToUrl = '@Url.Action("ListContractAwait", "Director")';
                    window.location.href = redirectToUrl;
                    console.error('Error:', error);

                }
            });
        });

        $("#signDefaultBtn").on("click", function () {
            // Gửi danh sách đối tượng đã chọn lên server qua Ajax
            var defaultImg = '@Html.Raw(defaultImg)';
            if(defaultImg == ''){
                alert("Bạn chưa cài đặt chữ ký mặc định!!")
            }else{
                selectedObjects.forEach(function (obj) {
                    obj.ImagePath = defaultImg; // Thay thế bằng giá trị mới của ImagePath
                });
            }
            $.ajax({
                url: '/Director/SignListContract',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(selectedObjects),
                success: function (result) {
                    // Chuyển hướng tới trang mong muốn
                    var redirectToUrl = '@Url.Action("ListContractAwait", "Director")';
                    window.location.href = redirectToUrl;
                    // Xử lý kết quả từ server nếu cần
                },
                error: function (error) {
                    // Chuyển hướng tới trang mong muốn
                    var redirectToUrl = '@Url.Action("ListContractAwait", "Director")';
                    window.location.href = redirectToUrl;
                    console.error('Error:', error);
                }
            });
        });
    });
</script>