@model QuanLyHopDongVaKySo.CLIENT.ViewModels.VMContractsActive
@{
    string userRole = Context.Request.HttpContext.Session.GetString("Role");
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<div class="container-fluid">
    @if(userRole == "Admin")
    {
        Layout = "_AdminLayout";

        <div class=" block justify-between items-center p-4  mt-4 mb-6 bg-white rounded-2xl shadow-xl shadow-gray-200 lg:p-5 sm:flex">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <i class="ph-bold ph-house" style="font-size: 20px; margin: auto 5px;"></i>
                    <li class="breadcrumb-item"> <a>Trang chủ</a></li>
                    <li class="breadcrumb-item"> <a>Giám đốc</a></li>
                    <li class="breadcrumb-item active" aria-current="page"> Hợp đồng hoạt động</li>
                </ol>
            </nav>
            <h1 class="typeHead">TẤT CẢ DANH SÁCH </h1>
            <div class="row">
                <input type="search" id="searchInput" style="margin-left: 10px;" placeholder="Tìm kiếm" />
            </div>
        </div>
    }
    else
    {
        Layout = "_Layout";
        <div class=" block justify-between items-center p-4  mt-4 mb-6 bg-white rounded-2xl shadow-xl shadow-gray-200 lg:p-5 sm:flex">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <i class="ph-bold ph-house" style="font-size: 20px; margin: auto 5px;"></i>
                    <li class="breadcrumb-item"> <a>Trang chủ</a></li>
                    <li class="breadcrumb-item active" aria-current="page"> Hợp đồng hoạt động</li>
                </ol>
            </nav>
            <h1 class="typeHead">TẤT CẢ DANH SÁCH </h1>
            <div class="row">
                <input type="search" id="searchInput" style="margin-left: 10px;" placeholder="Tìm kiếm" />
            </div>
        </div>
    }
    <div class="tab-container">
        <div class="tab-button active" onclick="showTab('tab1')">Danh sách hợp đồng hoạt động</div>
        <div class="tab-button" onclick="showTab('tab2')">Danh sách hợp đồng ngưng hoạt động</div>
    </div>
    <div class="tab-content active" id="tab1">
        <div class="row bg-white mx-auto my-auto mt-2 rounded">
            <div class="listTable">
                <table class="table display" id="myTable">
                    <thead>
                        <tr style="color: #8B909A;">
                            <th scope="col">ID</th>
                            <th scope="col">EMAIL</th>
                            <th scope="col">NGÀY ĐĂNG KÝ DỊCH VỤ</th>
                            <th scope="col">HỌ VÀ TÊN</th>
                            <th scope="col">LOẠI HỢP ĐỒNG ĐĂNG KÝ</th>
                            <th scope="col">TRẠNG THÁI</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody class="table-group-divider">
                        @foreach (var item in Model.DContractsInEffect)
                        {
                            <tr>
                                <td>@item.Id</td>
                                <td>@item.CustomerEmail</td>
                                <td>@item.DateDone</td>
                                <td>@item.CustomerName</td>
                                <td>@item.TypeOfService</td>
                                <td class="d-flex align-items-center">
                                    <div style="width: 5px; height: 5px; background-color: #00C9A7; border-radius: 50%; margin-right: 20px;"></div>
                                    <span>@item.Status</span>
                                </td>
                                <td>
                                    <a asp-controller="Director" asp-action="Details_Contract_Active" asp-route-id="@item.Id">
                                        Chi tiết
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="tab-content " id="tab2">
        <div class="row bg-white mx-auto my-auto mt-2 rounded">
            <div class="listTable">
                <table class="table display" id="myTable1">
                    <thead>
                        <tr style="color: #8B909A;">
                            <th scope="col">ID</th>
                            <th scope="col">LOẠI HỢP ĐỒNG ĐĂNG KÝ</th>
                            <th scope="col">EMAIL</th>
                            <th scope="col">HỌ VÀ TÊN</th>
                            <th scope="col">NGÀY ĐĂNG KÝ DỊCH VỤ</th>
                            <th scope="col">TRẠNG THÁI</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody class="table-group-divider align-middle">
                        @foreach (var item in Model.DContractsNotInEffect)
                        {
                            <tr>
                                <td>@item.Id</td>
                                <td>@item.TypeOfService</td>
                                <td>@item.CustomerEmail</td>
                                <td>@item.CustomerName</td>
                                <td>@item.DateDone</td>
                                <td class="d-flex align-items-center" style="height:45px;">
                                    <div style="width: 5px; height: 5px; background-color: red; border-radius: 50%; margin-right: 20px;">
                                    </div>
                                    @item.Status
                                </td>
                                <td class="text-center">
                                    <a class="button-design" onclick="confirmDownload('@item.Base64File','@item.DContractName')"><i class="ph-bold ph-download-simple"></i></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

</div>
<script type="text/javascript">


    // tìm kiếm
    document.addEventListener('DOMContentLoaded', function () {
        // Lấy đối tượng ô tìm kiếm chung
        var searchInput = document.getElementById('searchInput');

        // Thêm sự kiện 'input' cho ô tìm kiếm chung
        searchInput.addEventListener('input', function () {
            filterAllTables(searchInput);
        });

        // Lấy đối tượng bảng và ô tìm kiếm cho Tab 1
        var table1 = document.getElementById('myTable1');

        // Lấy đối tượng bảng và ô tìm kiếm cho Tab 2
        var table2 = document.getElementById('myTable');
    });

    function filterAllTables(input) {
        var filter = input.value.toLowerCase();

        // Lấy tất cả các bảng trong tất cả các tab
        var tables = document.getElementsByClassName('table');

        for (var t = 0; t < tables.length; t++) {
            var rows = tables[t].getElementsByTagName('tbody')[0].getElementsByTagName('tr');

            for (var i = 0; i < rows.length; i++) {
                var rowData = rows[i].innerText.toLowerCase();
                if (rowData.includes(filter)) {
                    rows[i].style.display = '';
                } else {
                    rows[i].style.display = 'none';
                }
            }
        }
    }


    $(document).ready(function () {
        // Khởi tạo DataTable
        function initializeDataTable(tableId) {
            $('#' + tableId).DataTable({
                "searching": false,
                "info": false,
                "lengthMenu": [10, 25, 50, 100],
                "pageLength": 25,
                "language": {
                    "decimal": "",
                    "paginate": {
                        "first": "Đầu tiên",
                        "last": "Cuối cùng",
                        "next": "Sau",
                        "previous": "Trước"
                    },
                    "lengthMenu": "Hiển thị _MENU_ dữ liệu",
                    "emptyTable": "Không có dữ liệu"
                }
            });
        }

        // Khởi tạo DataTable cho các bảng cụ thể
        initializeDataTable('myTable');
        initializeDataTable('myTable1');
    });


    function downloadPDF(base64String, fileName) {
        var byteCharacters = atob(base64String);
        var byteNumbers = new Array(byteCharacters.length);
        for (var i = 0; i < byteCharacters.length; i++) {
            byteNumbers[i] = byteCharacters.charCodeAt(i);
        }
        var byteArray = new Uint8Array(byteNumbers);
        var blob = new Blob([byteArray], { type: 'application/pdf' });

        var blobUrl = URL.createObjectURL(blob);

        var a = document.createElement('a');
        a.href = blobUrl;
        a.download = fileName;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
    }

    function confirmDownload(base64File, tMinuteName) {
        // Sử dụng SweetAlert để xác nhận tải xuống
        Swal.fire({
            title: 'Bạn có muốn tải xuống?',
            text: 'Hành động này sẽ tải xuống tệp PDF.',
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Tải xuống',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.isConfirmed) {
                // Nếu người dùng xác nhận tải xuống, thực hiện hàm tải xuống
                downloadPDF(base64File, tMinuteName);
            }
        });
    }

    function showTab(tabId) {
        // Ẩn tất cả các nội dung tab
        var tabContents = document.querySelectorAll('.tab-content');
        tabContents.forEach(function (content) {
            content.classList.remove('active');
        });

        // Ẩn tất cả các tab-button
        var tabButtons = document.querySelectorAll('.tab-button');
        tabButtons.forEach(function (button) {
            button.classList.remove('active');
        });

        // Hiển thị nội dung của tab được chọn và làm cho tab-button trở nên active
        var selectedTab = document.getElementById(tabId);
        selectedTab.classList.add('active');

        var selectedButton = document.querySelector('[onclick="showTab(\'' + tabId + '\')"]');
        selectedButton.classList.add('active');
    }






    document.addEventListener('DOMContentLoaded', function () {
        // Lấy đối tượng ô tìm kiếm và bảng
        var input = document.getElementById('searchInput');
        var table = document.getElementById('myTable');

        // Thêm sự kiện 'input' cho ô tìm kiếm
        input.addEventListener('input', function () {
            // Gọi hàm filterTable khi người dùng nhập liệu
            filterTable();
        });

        function filterTable() {
            // Lấy giá trị từ ô tìm kiếm và chuyển đổi thành chữ thường
            var filter = input.value.toLowerCase();

            // Lấy tất cả các dòng trong tbody của bảng
            var rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');

            // Lặp qua từng dòng và ẩn hoặc hiển thị dựa trên từ khóa tìm kiếm
            for (var i = 0; i < rows.length; i++) {
                var rowData = rows[i].innerText.toLowerCase();
                if (rowData.includes(filter)) {
                    rows[i].style.display = '';
                } else {
                    rows[i].style.display = 'none';
                }
            }
        }
    });

</script>